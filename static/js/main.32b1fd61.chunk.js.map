{"version":3,"sources":["api.ts","types/FilterStatus.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterStatus","TodoList","todos","onSelectTodo","selectedTodo","className","map","todo","cn","id","completed","title","type","onClick","event","TodoFilter","query","handleInput","setFilterStatus","onChange","target","value","placeholder","style","pointerEvents","Loader","TodoModal","onClose","useState","user","setUser","isLoading","setIsLoading","useEffect","userId","u","catch","error","Error","message","href","email","name","App","setTodos","setSelectedTodo","setQuery","ALL","filterStatus","todosFromServer","visibleTodos","filter","normalizedQuery","toLowerCase","trim","normalizedTodo","includes","ACTIVE","COMPLETED","preventDefault","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32b1fd61.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FilterStatus {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onSelectTodo: (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n    todo: Todo,\n  ) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onSelectTodo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => (\n        <tr\n          data-cy=\"todo\"\n          key={todo.id}\n          className={cn('', {\n            'has-background-info-light': todo.id === selectedTodo?.id,\n          })}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={cn(\n                { 'has-text-danger': !todo.completed },\n                { 'has-text-success': todo.completed },\n              )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={(event) => onSelectTodo(event, todo)}\n            >\n              <span className=\"icon\">\n                <i\n                  className={cn('far', {\n                    'fa-eye': todo.id !== selectedTodo?.id,\n                    'fa-eye-slash': todo.id === selectedTodo?.id,\n                  })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\nimport { FilterStatus } from '../../types/FilterStatus';\n\ntype Props = {\n  query: string;\n  handleInput: (query: string) => void;\n  setFilterStatus: (status: FilterStatus) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  handleInput,\n  setFilterStatus,\n}) => {\n  const handleFilterStatus = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilterStatus(event.target.value as FilterStatus);\n  };\n\n  const handleClear = () => {\n    handleInput('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" onChange={handleFilterStatus}>\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => handleInput(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClear}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\n\nimport { getUser } from '../../api';\n\nimport { Loader } from '../Loader';\n\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n  onClose: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClose }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then((u) => {\n        setUser(u);\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        throw new Error('Error fetching user: ', error.message);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>{user?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\n\nimport { getTodos } from './api';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\n\nimport { Todo } from './types/Todo';\nimport { FilterStatus } from './types/FilterStatus';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [query, setQuery] = useState('');\n  const [filterStatus, setFilterStatus] = useState(FilterStatus.ALL);\n\n  useEffect(() => {\n    getTodos()\n      .then((todosFromServer) => {\n        setTodos(todosFromServer);\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        throw new Error('Loading todos error: ', error.message);\n      });\n  }, []);\n\n  const visibleTodos = todos.filter((todo) => {\n    const normalizedQuery = query.toLowerCase().trim();\n\n    const normalizedTodo = todo.title\n      .toLowerCase()\n      .trim()\n      .includes(normalizedQuery);\n\n    switch (filterStatus) {\n      case FilterStatus.ALL:\n        return normalizedTodo;\n\n      case FilterStatus.ACTIVE:\n        return normalizedTodo && !todo.completed;\n\n      case FilterStatus.COMPLETED:\n        return normalizedTodo && todo.completed;\n\n      default:\n        throw new Error('Unknown status selector');\n    }\n  });\n\n  const selectTodo = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n    todo: Todo,\n  ) => {\n    event.preventDefault();\n    setSelectedTodo(todo);\n  };\n\n  const handleCloseTodo = () => {\n    setSelectedTodo(null);\n  };\n\n  const handleInput = (value: string) => {\n    setQuery(value);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                handleInput={handleInput}\n                setFilterStatus={setFilterStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={visibleTodos}\n                  onSelectTodo={selectTodo}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal todo={selectedTodo} onClose={handleCloseTodo} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}